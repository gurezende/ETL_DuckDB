import duckdb
import os

########### Generating KPIs from the data ###########
"""
In this section, you will generate the KPIs from the data that wAS extracted from the API.
Let's determine the following KPIs:

By Store:

    1. The total quantity sold of each product
    2. The total revenue generated from each product by store
    3. The total revenue generated by store

By Product:

    1. The total quantity sold of each product
    2. The average price of each product
    3. The average quantity sold of each product
    4. The total revenue generated from each product

"""

def transform(data:list):
    # Reading the data
    api_data = duckdb.read_parquet(data)

    # KPIs by store
    by_store = duckdb.sql("""
            SELECT
               store, 
               product, 
               SUM(quantity) AS total_qty, 
               CAST(SUM(price*quantity) AS DECIMAL(10, 2)) AS total_revenue, 
               CAST(date AS DATE) AS dt
            FROM api_data
            GROUP BY store, product, dt
            ORDER BY store, total_qty ASC
               """)


    # KPIs by product
    by_product = duckdb.sql("""
            SELECT 
               product, 
               SUM(quantity) as total_qty,
               CAST(AVG(price) AS DECIMAL(10, 2)) as avg_price,
               CAST(AVG(quantity) AS DECIMAL(10, 2)) as avg_qty,
               CAST(SUM(price*quantity) AS DECIMAL(10, 2)) as total_revenue,
               CAST(date AS DATE) AS dt
            FROM api_data
            GROUP BY product, dt
            ORDER BY total_qty ASC
               """)

    # Reurn
    return by_store, by_product


if __name__ == '__main__':

    # Read the current directory for parquet files
    files = [f for f in os.listdir("./") if f.endswith(".parquet")]

    stores, products = transform(files)
    print(stores)
    print(products)

    # print(duckdb.execute('SELECT * FROM products').fetchall())
