# AI Agent to summarize the report
import os
from agno.agent import Agent
from agno.models.google import Gemini
from report import *
from utils import *


def generate_report_and_send(recipient_email, sender_email, password):

    """
    Generate a report and send it via email.

    This function uses the `generate_report` function to generate a report and then
    sends it via email using the `send_email` function.

    The report is generated by running an AI Agent that summarizes the report
    generated by the `generate_report` function.

    """
    
    agent = Agent(
        model= Gemini(id="gemini-2.0-flash", api_key=os.environ.get("GEMINI_API_KEY")),
        tools=[generate_report],
        description="""You are an experienced Analyst that helps people to understand the data they are working with.
                        You are given 4 tables and a question and you analyze the data in a clear and concise way.""",
        instructions="""
                        First, run the 'generate_report' tool. If it fails, try running it again. Ignore the error message with 'dt'.
                        Read the 'report.md' generated by the 'generate_report' tool and summarize the main points in a clear and concise way.
                        The summary should include:
                        - The store with the highest total revenue for that day.
                        - The store with the best performance over the last week and last month.
                        - The product with the highest total quantity sold for that day.
                        - The product with the best performance over the last week and last month.
                        - Analyze the optimized price and provide insights about the optimized price for each product.
                        - Actionable recommendations for the store and product.
                        If you don't know the answer, you can say 'I don't know'.""",
        expected_output="""A report like response and marketing recommendation for the store and product.""",
        exponential_backoff=True,
        delay_between_retries=5,
        retries=2,
        memory=True
    )

    # Prompt
    prompt = "Analyze the tables and return a report like response with totals and marketing recommendation for each store and product."

    # Run the agent and get the response
    response = agent.run(prompt, markdown=True, stream=False).content

    # Send the report via email
    send_email(recipient_email=recipient_email,
            sender_email=sender_email,
            sender_password=password,
            message=response,
            report_md="report.md",
            charts="mosaic.png"
            )


if __name__ == "__main__":

    # Configure email settings
    recipient_email = os.environ.get("RECIPIENT_EMAIL")
    sender_email = os.environ.get("SENDER_EMAIL")
    password = os.environ.get("EMAIL_PASSWORD")

    # Generate the report and send it via email
    generate_report_and_send(recipient_email, sender_email, password)